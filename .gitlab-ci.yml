default:
  image: node:22

stages:
  - pr_agent
  - test
  - publish
  - deploy

pr_agent_job:
  stage: pr_agent
  image:
    name: codiumai/pr-agent:latest
    entrypoint: [""]
  script:
    - cd /app
    - echo "Running PR Agent action step"
    - export MR_URL="$CI_MERGE_REQUEST_PROJECT_URL/merge_requests/$CI_MERGE_REQUEST_IID"
    - echo "MR_URL=$MR_URL"
    - export gitlab__url=$CI_SERVER_PROTOCOL://$CI_SERVER_FQDN
    - export gitlab__PERSONAL_ACCESS_TOKEN=$GITLAB_PERSONAL_ACCESS_TOKEN
    - export config__git_provider="gitlab"
    - export openai__key=$OPENAI_KEY
    #- python -m pr_agent.cli --pr_url="$MR_URL" describe
    - python -m pr_agent.cli --pr_url="$MR_URL" review
    #- python -m pr_agent.cli --pr_url="$MR_URL" improve
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

test:
  stage: test
  script:
    - npm test
  cache:
    key: ${CI_COMMIT_REF_SLUG}-npm
    paths:
      - .npm/
 
  before_script:
    - npm ci --cache .npm --prefer--offline  

publish:
  stage: publish
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

deploy:
  stage: deploy
  image: alpine:latest
  only:
    - master
  script:
    - chmod og= $SERVER_KEY
    - apk update && apk add openssh-client
    - ssh -i $SERVER_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY"
    - ssh -i $SERVER_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
    - ssh -i $SERVER_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f klippify || true"
    - ssh -i $SERVER_KEY -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p $HTTP_PORT:$APP_PORT -e APP_PORT=$APP_PORT --name klippify $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"


